#lang racket
(define func1
  (lambda (x y)
    (cond
      [(empty? x) (cons x y)]
      [else (first x)])))

(define a '())
(define b '(1 2 3))
(define c '(4 5 6 7))

(define new-list
  (lambda (w)
      (cons (first(rest(rest w))) (cons (first (rest w)) (cons (first w) (rest (rest (rest w))))))))
